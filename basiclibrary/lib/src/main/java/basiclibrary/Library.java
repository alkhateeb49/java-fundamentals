/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package basiclibrary;

import java.util.ArrayList;
import java.util.Arrays;

public class Library {
    public boolean someLibraryMethod() {
        return true;
    }

    public static void main(String[] args) {
//        System.out.println(Arrays.toString(roll(6)));

//        int[] inputArr = new int[]{1,3,2,4};
//        System.out.println(containsDuplicates(inputArr));

//        int[][] weeklyMonthTemperatures = {
//                {66, 64, 58, 65, 71, 57, 60},
//                {57, 65, 65, 70, 72, 65, 51},
//                {55, 54, 60, 53, 59, 57, 61},
//                {65, 56, 55, 52, 55, 62, 57}
//        };
//
//        System.out.println(Arrays.toString(arrAvg(weeklyMonthTemperatures)));

    }

    public static int[] roll(int n) {
        int[] rolls = new int[n];
        for(int i = 0; i < n; i++){
            rolls[i] = (int)((Math.random() * 6) + 1);
        }
        return rolls;
    }


    public static boolean containsDuplicates(int[] arr){
        for(int i = 0; i < arr.length; i++){
            for(int j = 1; j < arr.length; j++){
                if(arr[i] == arr[j] && i != j) return true;
            }
        }
        return false;
    }


    public static double Avg(int[] arr){
        double sum = 0;
        for(int i = 0; i < arr.length; i++){
            sum =sum+arr[i];
        }
        return sum/arr.length;
    }


    public static int[] arrAvg(int[][] arr){
        ArrayList<Integer> averages = new ArrayList<>();
        int lowestAvg = Integer.MAX_VALUE;
        int lowestAvgIndex = 0;
        int avg = 0;
        for(int i = 0; i < arr.length; i++){
            int sum = 0;
            for(int j = 0; j < arr[i].length; j++){
                sum += arr[i][j];
                avg = sum/arr[i].length;
            }
            averages.add(avg);
        }
        for(int k = 0; k < averages.size(); k++){
            if(averages.get(k) < lowestAvg){
                lowestAvg = averages.get(k);
                lowestAvgIndex = k;
            }
        }
        return arr[lowestAvgIndex];
    }

}
